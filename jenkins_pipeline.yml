pipeline{
  agent {
        label 'master'
    }
  parameters{
        string(name:'REGISTRY', defaultValue: '192.168.5.30:8123', description: 'Application name')
        string(name:'OS_SERVER', defaultValue:"https://master.sgs.com:8443", description: "Openshift URL")
        string(name:'DOCKER_REPO', defaultValue:"docker-repo", description: "")
        string(name:'NEXUS_USER', defaultValue:"admin", description: "Nexus  user name ")
        string(name:'NEXUS_PASSWORD', defaultValue:"password", description: "Nexus  user password")
        string(name:'OS_NAMESPACE', defaultValue:"cicd-workflow", description: "Openshift Namespace")
        string(name:'OS_TOKEN', defaultValue:"eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJjaWNkLXdvcmtmbG93Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImplbmtpbnMtdG9rZW4tY3Y0NXEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiamVua2lucyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjE4Y2U2OGZkLWJmMDYtMTFlOS05YjQxLTAwNTA1Njk0MGMwOCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpjaWNkLXdvcmtmbG93OmplbmtpbnMifQ.MsEdxcGOC6lBgM7o84CVXt7UyuYkp4ModYCcXeyE5OvCzH292QRjGCf8bTq9cAZvQH4WQOJg7WU236AjhUoIbe_quhtWJp8xf3zqxizfnBGZyT_uXEunt5IKleAFLqH-9NOP5BD-vbdaSOVbjOSN5XX0Wyvgwl9r4dqXEfYnURNy_T5pi0Tj5Ky8wlnXnkS5BuhBpJGjt9Y1aKBDXbOHr7LXU_FBeinhRuvsQp-NtNBb2ntU_4tlcWJPp5Uz2n8v4qTwbkTiEoGqCR4QwetG34qf1AxQQVcp2gfQ31AzhWgZBjzwD-jVoiRU815fdjgRyBr0uXxBt_YyC4iFd-gO4A", description: "Openshift Token")
        string(name:'TAG', defaultValue: 'latest', description: 'Docker Tag')
        string(name:'DOCKER_IMAGE', defaultValue: 'docker-image', description: 'Docker name')
   }
   
   stages{
		stage('Clone Repo'){
                steps{
                        script{
                                dir ('docker_image'){
								git credentialsId: '3b8769cb-d2b3-451f-8ad0-130dad71c7e0'	, url: 'http://192.168.5.31:7990/scm/sgs/docker_image_build.git', branch: 'master'
                                }
                                dir ('openshift_deploy_file'){
								git url: 'https://github.com/ksadeleke/Ansible-Jenkins.git', branch: 'master'
                                }
                         }
                    }
         }
        stage('Docker Image Build'){
                steps{
                        script{
								echo " Docker image Build"
								sh '''
								cd ${WORKSPACE}/docker_image

                                sudo docker build -t ${REGISTRY}/${DOCKER_REPO}/${DOCKER_IMAGE}:${TAG} . 
                                '''
		 	     
                         }
                    }
         }
        stage('Test Image'){                
                steps{
                        script{
                                echo " Test Image"
                              }
                    }
         }
		 stage('Upload Image To Artifactory'){
                steps{
                        script{
						       echo " Upload Image" 
						       sh '''
						       sudo docker login -u ${NEXUS_USER} -p ${NEXUS_PASSWORD} ${REGISTRY}

                               sudo docker push ${REGISTRY}/${DOCKER_REPO}/${DOCKER_IMAGE}

                               sudo docker rmi --force ${REGISTRY}/${DOCKER_REPO}/${DOCKER_IMAGE}:${TAG}
                              '''
						       
                              }
                    }
         }
		 stage('OS Deploy'){
                steps{
                        script{
						        echo " OS Deploy"
						        sh '''
						        
						        oc login ${OS_SERVER} --token=${OS_TOKEN} --insecure-skip-tls-verify
                                oc project --namespace=${OS_NAMESPACE}
                                oc process -f ${WORKSPACE}/openshift_deploy_file/artifactory-pro.yml | oc apply -f- 
                                '''

                              }
                    }
         }
   }
}
